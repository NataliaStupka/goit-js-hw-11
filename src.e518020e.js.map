{"version":3,"sources":["api.js","load-more-btn.js","index.js"],"names":["BASE_URL","page","totalImages","pageSize","totalPages","fetchPhoto","fetch","then","response","ok","json","Error","images","hasNextPage","LoadMoreBtn","constructor","selector","className","isHidden","onClick","document","querySelector","hide","show","classList","remove","add","addEventListener","refs","input","buttonSearch","gallery","loadMoreBtn","loadPhoto","data","renderPhoto","buttonLoadMore","imagesArray","hits","console","log","markup","map","largeImageURL","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML"],"mappings":"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","file":"src.e518020e.js","sourceRoot":"../src","sourcesContent":["\nconst BASE_URL = \"https://pixabay.com/api\";\n\nlet page = 1;\nconst totalImages = 500;\nconst pageSize = 40;\nconst totalPages = totalImages / pageSize;\n\nexport function fetchPhoto() {\n    const url = `${BASE_URL}/?key=24451783-36fc53d78d658727e466a2b4b&q=cat&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${pageSize}`;\n    return fetch(url).then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw Error('This is Error');\n    }).then(images => {\n        page += 1;\n        return {\n            images,\n            hasNextPage: page <= totalPages,\n        };\n        })\n}","\nexport class LoadMoreBtn {\n    #element;\n    #className;\n    #onClick;\n\n    constructor({selector, className = 'hidden', isHidden = false, onClick = () => null}) {\n        this.#element = document.querySelector(selector);\n        this.#className = className;\n        this.#onClick = onClick;\n\n        this.#bindEvents()\n        if(isHidden) this.hide()\n    }\n    \n    show() {\n        this.#element.classList.remove(this.#className)\n    }\n    \n    hide() {\n        this.#element.classList.add(this.#className)\n    }\n\n    #bindEvents() {\n        this.#element.addEventListener('click', this.#onClick)\n    }\n}\n","// import axios from \"axios\";\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// ??? или const lightbox = new SimpleLightbox('.gallery a', { /* options */ });\n// import SimpleLightbox from \"simplelightbox\";\n\n// разметка для SimpleLightbox, и обернуть каждую карточку изображения в ссылку, как указано в документации\n\n\nimport { fetchPhoto } from \"./api\"\nimport {LoadMoreBtn} from \"./load-more-btn\"\n\nconst refs = {\n    input: document.querySelector('.input-form'),\n    buttonSearch: document.querySelector('.button-form'),\n    gallery: document.querySelector('.gallery'),\n    // buttonLoadMore: document.querySelector('.load-more'),\n}\n\nconst loadMoreBtn = new LoadMoreBtn({\n    selector: '.load-more',\n    className: 'is-hidden',\n    isHidden: true,\n    onClick() {\n        loadPhoto();\n    }\n});\n\nloadMoreBtn.hide();\n\n\nloadPhoto().then(() => {\n    refs.buttonLoadMore.show();\n});\n\n    \nfunction loadPhoto() \n { return  fetchPhoto().then(data => {\n     renderPhoto(data.images);\n     // скрываем кнопку когда дошли до конца\n     if (!data.hasNextPage) {\n          refs.buttonLoadMore.hide();\n     }\n })\n}\n\n\nfunction renderPhoto(images) {\n    const imagesArray = images.data.hits;\n    console.log('ЭТО долбыный массив', imagesArray)\n    const markup = imagesArray.map(({ largeImageURL, webformatURL, tags, likes, views, comments, downloads }) => `\n        <a class=\"\" href=\"${largeImageURL}\">\n                 <div class=\"photo-card\">\n                 <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n                 <div class=\"info\">\n                     <p class=\"info-item\">\n                     <b>Likes:${likes}</b>\n                     </p>\n                     <p class=\"info-item\">\n                     <b>Views:${views}</b>\n                     </p>\n                     <p class=\"info-item\">\n                     <b>Comments:${comments}</b>\n                     </p>\n                     <p class=\"info-item\">\n                     <b>Downloads:${downloads}</b>\n                     </p>\n                 </div>\n                 </div>\n            </a>`\n    )\n        .join('');\n    \n    refs.insertAdjacentHTML('beforeend', markup); \n}\n\n\n\n// exemple https://pixabay.com/api/?key=24451783-36fc53d78d658727e466a2b4b&q=yellow+flowers&image_type=photo\n// const URL = `https://pixabay.com/api/?key=24451783-36fc53d78d658727e466a2b4b&q=${inputText}&image_type=photo&orientation=horizontal&safesearch=true`;\n// --------------------------------------DELETE----------------------\n\n\n// function onButtonSearch(event) {\n//     event.preventDefault();\n//     const inputText = refs.input.value;\n\n//     fetchPhoto(inputText)\n//         .then(renderPhotoCard)\n//         .catch(error => {\n//             console.log('ошибка!!!?', error)\n//         });;\n//     console.log('клацнули на поиск')\n// };\n\n\n\n"]}